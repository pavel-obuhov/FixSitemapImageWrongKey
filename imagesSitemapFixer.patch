diff --git a/vendor/magento/module-sitemap/Controller/Adminhtml/Sitemap/Generate.php b/vendor/magento/module-sitemap/Controller/Adminhtml/Sitemap/Generate.php
index 8eeeb5bf..c983dd47 100644
--- a/vendor/magento/module-sitemap/Controller/Adminhtml/Sitemap/Generate.php
+++ b/vendor/magento/module-sitemap/Controller/Adminhtml/Sitemap/Generate.php
@@ -11,6 +11,7 @@ use Magento\Framework\App\Action\HttpGetActionInterface;
 use Magento\Sitemap\Controller\Adminhtml\Sitemap;
 use Magento\Store\Model\App\Emulation;
 use Magento\Framework\App\ObjectManager;
+use Magento\Framework\App\Area;
 
 /**
  * Generate sitemap file
@@ -49,6 +50,12 @@ class Generate extends Sitemap implements HttpGetActionInterface
         // if sitemap record exists
         if ($sitemap->getId()) {
             try {
+                $this->appEmulation->startEnvironmentEmulation(
+                    $sitemap->getStoreId(),
+                    Area::AREA_FRONTEND,
+                    true
+                );
+
                 $sitemap->generateXml();
                 $this->messageManager->addSuccessMessage(
                     __('The sitemap "%1" has been generated.', $sitemap->getSitemapFilename())
@@ -57,6 +64,8 @@ class Generate extends Sitemap implements HttpGetActionInterface
                 $this->messageManager->addErrorMessage($e->getMessage());
             } catch (\Exception $e) {
                 $this->messageManager->addExceptionMessage($e, __('We can\'t generate the sitemap right now.'));
+            } finally {
+                $this->appEmulation->stopEnvironmentEmulation();
             }
         } else {
             $this->messageManager->addErrorMessage(__('We can\'t find a sitemap to generate.'));
diff --git a/vendor/magento/module-sitemap/Model/Observer.php b/vendor/magento/module-sitemap/Model/Observer.php
index ce74d738..105da411 100644
--- a/vendor/magento/module-sitemap/Model/Observer.php
+++ b/vendor/magento/module-sitemap/Model/Observer.php
@@ -5,9 +5,11 @@
  */
 namespace Magento\Sitemap\Model;
 
+use Magento\Framework\App\Area;
 use Magento\Sitemap\Model\EmailNotification as SitemapEmail;
 use Magento\Framework\App\Config\ScopeConfigInterface;
 use Magento\Sitemap\Model\ResourceModel\Sitemap\CollectionFactory;
+use Magento\Store\Model\App\Emulation;
 use Magento\Store\Model\ScopeInterface;
 
 /**
@@ -70,11 +72,13 @@ class Observer
     public function __construct(
         ScopeConfigInterface $scopeConfig,
         CollectionFactory $collectionFactory,
-        SitemapEmail $emailNotification
+        SitemapEmail $emailNotification,
+        Emulation $appEmulation
     ) {
         $this->scopeConfig = $scopeConfig;
         $this->collectionFactory = $collectionFactory;
         $this->emailNotification = $emailNotification;
+        $this->appEmulation = $appEmulation;
     }
 
     /**
@@ -105,9 +109,16 @@ class Observer
         foreach ($collection as $sitemap) {
             /* @var $sitemap \Magento\Sitemap\Model\Sitemap */
             try {
+                $this->appEmulation->startEnvironmentEmulation(
+                    $sitemap->getStoreId(),
+                    Area::AREA_FRONTEND,
+                    true
+                );
                 $sitemap->generateXml();
             } catch (\Exception $e) {
                 $errors[] = $e->getMessage();
+            } finally {
+                $this->appEmulation->stopEnvironmentEmulation();
             }
         }
         if ($errors && $recipient) {
